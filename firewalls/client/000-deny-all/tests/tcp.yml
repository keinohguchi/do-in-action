---
- name: start TCP server
  hosts: server
  vars:
    server_port: "{{ server.port }}"
  gather_facts: false
  tasks:
    - name: start busybox based HTTP server as TCP server
      shell: nohup busybox httpd -f -p "{{ server_port }}" 0<&- &> /tmp/script.log &
      register: result
      changed_when: false
      become: true

    - name: print out the result
      debug: var=result
      delegate_to: local

- name: TCP connection between two droplets
  hosts: client
  vars:
    server_port: "{{ server.port }}"
    timeout: 3
    debug: false
  gather_facts: false
  tasks:
    - name: check the TCP port reachability (IPv4)
      wait_for:
        host: "{{ server.ipv4 }}"
        port: "{{ server_port }}"
        state: started
        timeout: "{{ timeout }}"
      register: result
      failed_when: result.failed != true
      ignore_errors: "{{ debug }}"

    - name: print out the result
      debug: var=result

    - name: check the TCP port reachability (private IPv4)
      wait_for:
        host: "{{ server.ipv4_private }}"
        port: "{{ server_port }}"
        state: started
        timeout: "{{ timeout }}"
      register: result
      failed_when: result.failed != true
      ignore_errors: "{{ debug }}"

    - name: print out the result
      debug: var=result

    - name: check the TCP port reachability (IPv6)
      wait_for:
        host: "{{ server.ipv6 }}"
        port: "{{ server_port }}"
        state: started
        timeout: "{{ timeout }}"
      register: result
      failed_when: result.failed != true
      ignore_errors: "{{ debug }}"

    - name: print out the result
      debug: var=result

    - name: check the TCP port reachability (Floating IP)
      wait_for:
        host: "{{ server.flip }}"
        port: "{{ server_port }}"
        state: started
        timeout: "{{ timeout }}"
      register: result
      failed_when: result.failed != true
      ignore_errors: "{{ debug }}"

    - name: print out the result
      debug: var=result

- name: stop TCP server
  hosts: server
  gather_facts: false
  tasks:
    - name: stop busybox based httpd server
      command: killall busybox
      changed_when: false
      become: true
